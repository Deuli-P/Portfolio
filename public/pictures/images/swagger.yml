swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    # Il faut modifier la balance du client pour pouvoir actualiser son solde.
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Balance User
      description: API for updating balance user
      parameters:
        - in: body
          name: body
          description: New Balance Payload
          required: true
          schema:
            $ref: '#/definitions/UserBalancing'
      produces:
        - application/json
      responses:
        '200':
          description: Balance Successfully Updated
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Il faut en post: date/ id/ Nom/ montant/ Transaction Type/ Category/ Note.
  /product/transaction:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Show Transaction API
      description: API for posting a transaction
      parameters:
        - in: body
          name: body
          description: Product Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/TransactionPost'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction Successfully Posted
          schema:
            $ref: '#/definitions/TransactionPost'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Il faut en create : date/ id/ Nom/ montant/ Transaction Type/ Category/ Note.
  /product/add:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Create Transaction API
      description: API for adding a transaction
      parameters:
        - in: body
          name: body
          description: Creation Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/TransactionPost'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction Successfully Created
          schema:
            $ref: '#/definitions/TransactionPost'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  # Il faut en put : Category et Note.
  /product/update:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction
      summary: Update Note Transaction API
      description: API for updating a note and category
      parameters:
        - in: body
          name: body
          description: Product Update Payload
          required: true
          schema:
            $ref: '#/definitions/TransactionModification'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction Successfully Updated
          schema:
            $ref: '#/definitions/TransactionModification'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
      Balance:
        type: string
        description: user balance
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserBalancing:
    type: object
    properties:
      balance:
        type: string
  Transaction:
    type: object
    properties:
      createAt:
        type: string
        description: date of creation of the transaction
      id:
        type: string
        description: id of the transaction
      name:
        type: string
        description: name of the transaction
      amount:
        type: string
        description: amount of the transaction
      transactionType:
        type: string
        description: transaction type of the transaction
      category:
        type: string
        description: category of the transaction
      note:
        type: string
        description: note of the transaction
  TransactionModification:
    type: object
    properties:
      note:
        type: string
      category:
        type: string
